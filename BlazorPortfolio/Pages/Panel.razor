@page "/"
@using System.Globalization;
@inject HttpClient http
@inject IJSRuntime JS
@implements IDisposable

@if (PersonalData == null)
{
    <div class="loader"></div>
}
else
{
    <main >
    <section class="head" >
        <div class="container">
            <div class="main" >
                <div class="main-photo">
                    <div class="personale">
                        <h1>@PersonalData.Name</h1>
                        <h3>@PersonalData.Title</h3>
                    </div>
                </div>
                <div class="left-side"></div>
                <div class="right-side"></div>
            </div>
        </div>
    </section>


    <!-- About me section -->
    <section class="about-me" id="aboutme">
        <div class="container">
            <div class="about-me-main">
                <div class="about-me-content">
                    <h1><span>Over </span><span>Mij</span></h1>
                    <div>
                        @PersonalData.Description
                    </div>
                    <a class="btn slide fast" href="https://malio1983.github.io/CV/" target="_blank">CV bekijken</a>
                </div>
                <div class="shape"></div>

            </div>
        </div>
    </section>

    <!-- skills section -->

    <section class="skills">
        <div class="container">
            <div class="skills-main">
                <div class="skills-title"><h1>Vaardigheden</h1></div>
                <div class="skills-content">
                    @foreach (var skill in PersonalData.Skills)
                    {
                       <SkillItemSVG Data="@skill"/>
                    }
                </div>
            </div>
        </div>
    </section>

    <!-- experience section -->

    <section class="experience">
        <div class="container">
            <div class="experience-main">
                <div class="experience-title"><h1>Ervaringen</h1></div>
                <div class="experience-content">
                        @foreach (var experience in PersonalData.Experiences)
                        {
                            <div class="experience-item" data-text="@($"{experience.From.ToString("MMM yyyy",new CultureInfo("nl-NL"))} \n - \n {experience.To.ToString("MMM yyyy",new CultureInfo("nl-NL"))}")">
                                <div>
                                    <span class="item-title">@experience.Company</span>
                                    @experience.Title
                                </div>
                            </div>
                            if (PersonalData.Experiences.IndexOf(experience) % 2 == 0)
                            {
                                <div></div>
                                <div></div>
                            }
                        }
                </div>
            </div>
        </div>
    </section>

        <!-- My projects section -->
        <section class="my-projects">
            <div class="container">
                <div class="my-projects-main">
                    <div class="my-projects-title"><h1>Mijn Projecten</h1></div>
                    <div class="my-projects-content">
                        @foreach (var project in PersonalData.Projects)
                        {
                            <div class="project-item">
                                <a href="@project.Link" target="_blank">
                                    <img class="project-img" src="@project.Image" alt="">
                                    <h3>@project.Title</h3>
                                </a>
                            </div>
                        }
                       @* <div class="project-item">
                            <a href="https://malio1983.github.io/Pickwick/" target="_blank">
                                <img class="project-img" src="img/Pick.png" alt="">
                                <h3>Pickwick</h3>
                            </a>
                        </div>
                        <div class="project-item">
                            <a href="https://malio1983.github.io/Efteling/" target="_blank">
                                <img class="project-img" src="img/Efteling.png" alt="">
                                <h3>Efteling</h3>
                            </a>
                        </div>
                        <div class="project-item">
                            <a href="https://malio1983.github.io/Barcelona/" target="_blank">
                                <img class="project-img" src="img/FCBarcelona.png" alt="">
                                <h3>FC Barcelona</h3>
                            </a>
                        </div>*@
                    </div>
                </div>
            </div>
        </section>

        <!-- Contact Section -->
        <section class="contact">
            <div class="container">
                <div class="contact-main">
                    <div class="contact-decoration"></div>
                    <div class="contact-content">
                        <h1>Contact</h1>
                        <div class="contact-details">
                            <i class="fas fa-envelope fa-2x"></i>
                            <a href="mailto:@PersonalData.Email" target="_blank"><h3>@PersonalData.Email</h3></a>
                            <i class="fas fa-phone fa-2x"></i>
                            <h3>@PersonalData.Phone</h3>
                            <i class="@PersonalData.SocialMedias.FirstOrDefault()?.Icon"></i>
                            <a href="@PersonalData.SocialMedias.FirstOrDefault()?.Link" target="_blank"><h3>@PersonalData.SocialMedias.FirstOrDefault()?.Name</h3></a>
                        </div>
                    </div>
                </div>
            </div>
        </section>
    </main>

}





@code {
    //public string Uri { get; set; } = "PersonalData";
    //public string Uri { get; set; } = "https://malio1983.github.io/data_api/portfolio.json";
    public string Uri { get; set; } = "sample-data/PersonalData.json";
    //public string Id { get; set; } = "63735f8a278272f4ddd27ea7";
    public PersonalData PersonalData { get; set; } = new PersonalData();

    protected async override Task OnInitializedAsync()
    {
        PersonalData = await http.GetFromJsonAsync<PersonalData>(Uri) ?? new PersonalData();
    }
    //ElementReference scrollElement;

    DotNetObjectReference<Panel>? selfReference;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            selfReference = DotNetObjectReference.Create(this);
            var minInterval = 500; // Only notify every 500 ms
            await JS.InvokeVoidAsync("onScroll", minInterval);
        }
    }

    public void Dispose() => selfReference?.Dispose();
}

